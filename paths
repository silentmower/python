from itertools import permutations

width = 4  
height = 7  

red_edges = {
    ((1,4), (2,4)),  # p
    ((2,6), (3,6)),  # q
    ((1,2), (1,3))   # r
}


from itertools import combinations

moves = ['R']*width + ['U']*height
unique_paths = set(permutations(moves))


def follow_path(path):
    x, y = 1, 1  
    visited_edges = set()
    for move in path:
        nx, ny = x + (1 if move == 'R' else 0), y + (1 if move == 'U' else 0)
        edge = ((x, y), (nx, ny))
        if edge in red_edges:
            visited_edges.add(edge)
        x, y = nx, ny
    return len(visited_edges)



count = 0
for path in unique_paths:
    red_count = follow_path(path)
    if red_count in (2,3):
        count += 1

print("Liczba sciezek przez 2 lub 3 czerwone krawedzie:", count)  
