import sympy as sp
import scipy.integrate as integrate



def get_function():
    x = sp.Symbol('x')
    while True:
        expr = input("Podaj funkcję do całkowania (np. x**2 + 3*x): ")
        try:
            func = sp.sympify(expr)
            if x not in func.free_symbols:
                print("Błąd! Funkcja musi zawierać zmienną x.")
            else:
                return func, x
        except:
            print("Niepoprawne wyrażenie. Spróbuj ponownie.")



def definite_integral():
    func, x = get_function()
    a = float(input("Podaj dolną granicę całkowania: "))
    b = float(input("Podaj górną granicę całkowania: "))

    result, _ = integrate.quad(lambda x: eval(str(func)), a, b)
    print(f"\nCałka oznaczona wynosi: {result}")


def indefinite_integral():
    func, x = get_function()
    result = sp.integrate(func, x)
    print(f"\nCałka nieoznaczona wynosi: {result} + C")


def main():
    print("Wybierz rodzaj całkowania:")
    print("1 - Całkowanie oznaczone")
    print("2 - Całkowanie nieoznaczone")

    choice = input("Podaj numer operacji: ")

    if choice == "1":
        definite_integral()
    elif choice == "2":
        indefinite_integral()
    else:
        print("Niepoprawny wybór. Spróbuj ponownie.")


if __name__ == "__main__":
    main()
